{"version":3,"sources":["../yjs/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/IndexedDB.js","y-indexeddb.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","TypeError","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","_classCallCheck","instance","Constructor","extend","Y","requestModules","then","createStoreClone","Store","Clone","_Store","this","_this","getPrototypeOf","apply","arguments","buffer","_copyTo","_createClass","key","store","regeneratorRuntime","mark","put","v","dontCopy","wrap","_context10","prev","next","push","delegateYield","_get","stop","_delete","id","_context11","flush","_context12","transaction","name","objectStore","find","_context","get","abrupt","sent","_context2","_context3","findWithLowerBound","start","_context4","openCursor","window","IDBKeyRange","lowerBound","findWithUpperBound","end","_context5","upperBound","findNext","_context6","t0","findPrev","_context7","iterate","gen","range","cursorResult","_context8","bound","result","_context9","utils","BufferedStore","createSmallLookupBuffer","ClonedStore","RBTree","Transaction","_Y$Transaction","_this2","db","ss","os","_ds","ds","dsClone","copyTo","OperationStore","_Y$AbstractDatabase","y","options","_this3","namespace","connector","room","idbVersion","requestTransaction","_callee","_context13","indexedDB","open","cleanStart","localStorage","JSON","stringify","_callee2","_context14","clear","whenUserIdSet","userid","_callee4","uid","nextuid","_context16","setUserId","parse","_callee3","_context15","operationAddedNamespace","operationsToAdd","addEventListener","event","newValue","op","_callee5","nextRound","left","add","ready","j","_op","_context17","struct","getOperation","t1","deleted","compareIds","operationAdded","noAdd","_context18","makeGen","handleTransactions","request","done","getNextRequest","console","log","source","IDBRequest","onsuccess","res","IDBCursorWithValue","onerror","err","IDBCursor","IDBOpenDBRequest","target","onupgradeneeded","deleteObjectStore","createObjectStore","keyPath","destroy","_context19","close","deleteDatabase","AbstractDatabase","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getter","defineProperties","props","descriptor","defineProperty","protoProps","staticProps"],"mappings":"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","file":"y-indexeddb.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y) {\n  Y.requestModules(['memory']).then(function () {\n    class Store {\n      constructor (transaction, name) {\n        this.store = transaction.objectStore(name)\n      }\n      * find (id) {\n        return yield this.store.get(id)\n      }\n      * put (v) {\n        yield this.store.put(v)\n      }\n      * delete (id) {\n        yield this.store.delete(id)\n      }\n      * findWithLowerBound (start) {\n        return yield this.store.openCursor(window.IDBKeyRange.lowerBound(start))\n      }\n      * findWithUpperBound (end) {\n        return yield this.store.openCursor(window.IDBKeyRange.upperBound(end), 'prev')\n      }\n      * findNext (id) {\n        return yield* this.findWithLowerBound([id[0], id[1] + 1])\n      }\n      * findPrev (id) {\n        return yield* this.findWithUpperBound([id[0], id[1] - 1])\n      }\n      * iterate (t, start, end, gen) {\n        var range = null\n        if (start != null && end != null) {\n          range = window.IDBKeyRange.bound(start, end)\n        } else if (start != null) {\n          range = window.IDBKeyRange.lowerBound(start)\n        } else if (end != null) {\n          range = window.IDBKeyRange.upperBound(end)\n        }\n        var cursorResult\n        if (range != null) {\n          cursorResult = this.store.openCursor(range)\n        } else {\n          cursorResult = this.store.openCursor()\n        }\n        while ((yield cursorResult) != null) {\n          yield* gen.call(t, cursorResult.result.value)\n          cursorResult.result.continue()\n        }\n      }\n      * flush () {}\n    }\n\n    function createStoreClone (Store) {\n      class Clone extends Store {\n        constructor () {\n          super(...arguments)\n          this.buffer = []\n          this._copyTo = null\n        }\n        // copy to this store\n        // it may be neccessary to reset this every time you create a transaction\n        copyTo (store) {\n          this._copyTo = store\n          return this\n        }\n        * put (v, dontCopy) {\n          if (!dontCopy) {\n            this.buffer.push(this._copyTo.put(v))\n          }\n          yield* super.put(v)\n        }\n        * delete (id) {\n          this.buffer.push(this._copyTo.delete(id))\n          yield* super.delete(id)\n        }\n        * flush () {\n          yield* super.flush()\n          for (var i = 0; i < this.buffer.length; i++) {\n            yield* this.buffer[i]\n          }\n          yield* this._copyTo.flush()\n        }\n      }\n      return Clone\n    }\n    Y.utils.createStoreClone = createStoreClone\n\n    var BufferedStore = Y.utils.createSmallLookupBuffer(Store)\n    var ClonedStore = Y.utils.createStoreClone(Y.utils.RBTree)\n\n    class Transaction extends Y.Transaction {\n      constructor (store) {\n        super(store)\n        var transaction = store.db.transaction(['OperationStore', 'StateStore', 'DeleteStore'], 'readwrite')\n        this.store = store\n        this.ss = new BufferedStore(transaction, 'StateStore')\n        this.os = new BufferedStore(transaction, 'OperationStore')\n        this._ds = new BufferedStore(transaction, 'DeleteStore')\n        this.ds = store.dsClone.copyTo(this._ds)\n      }\n    }\n    class OperationStore extends Y.AbstractDatabase {\n      constructor (y, options) {\n        super(y, options)\n        // dsClone is persistent over transactions!\n        // _ds is not\n        this.dsClone = new ClonedStore()\n\n        if (options == null) {\n          options = {}\n        }\n        this.options = options\n        if (options.namespace == null) {\n          if (y.options.connector.room == null) {\n            throw new Error('IndexedDB: expect a string (options.namespace)! (you can also skip this step if your connector has a room property)')\n          } else {\n            options.namespace = y.options.connector.room\n          }\n        }\n        if (options.idbVersion != null) {\n          this.idbVersion = options.idbVersion\n        } else {\n          this.idbVersion = 5\n        }\n        var store = this\n        // initialize database!\n        this.requestTransaction(function * () {\n          store.db = yield window.indexedDB.open(options.namespace, store.idbVersion)\n        })\n        if (options.cleanStart) {\n          delete window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])]\n          this.requestTransaction(function * () {\n            yield this.os.store.clear()\n            yield this._ds.store.clear()\n            yield this.ss.store.clear()\n          })\n        }\n        this.whenUserIdSet(function (userid) {\n          if (window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] == null) {\n            window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] = JSON.stringify([userid, 0])\n          }\n        })\n        this.requestTransaction(function * () {\n          // this should be executed after the previous two defined transactions\n          // after we computed the upgrade event (see `yield indexedDB.open(..)`), we can check if userid is still stored on localstorage\n          var uid = window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])]\n          if (uid != null) {\n            store.setUserId(uid)\n            var nextuid = JSON.parse(uid)\n            nextuid[1] = nextuid[1] + 1\n            window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] = JSON.stringify(nextuid)\n          }\n          // copy from persistent Store to not persistent StoreClone. (there could already be content in Store)\n          yield* this._ds.iterate(this, null, null, function * (o) {\n            yield* this.ds.put(o, true)\n          })\n        })\n        this.operationAddedNamespace = JSON.stringify(['__YJS__', this.options.namespace])\n        var operationsToAdd = []\n        window.addEventListener('storage', function (event) {\n          if (event.key === store.operationAddedNamespace) {\n            operationsToAdd.push(JSON.parse(event.newValue))\n            var op, i // helper variables\n            if (operationsToAdd.length === 1) {\n              store.requestTransaction(function * () {\n                /* about nextRound:\n                   if op is not a delete, we retrieve it again from the db\n                   then it could be true that op.left is not yet added to store\n                    - but the types _change function expects that it is..\n                   In this case left has to be executed first\n\n                   What is left to say: we only put ready to execute ops in nextRound!\n\n                   TODO: implement a smart buffer in eventHelper!!!!!\n                */\n                var nextRound = []\n                for (i = 0; i < operationsToAdd.length; i++) {\n                  op = operationsToAdd[i]\n                  if (op.struct !== 'Delete') {\n                    op = yield* this.getOperation(op.id)\n                    while (op.left != null) {\n                      var left = yield* this.getOperation(op.left)\n                      if (!left.deleted) {\n                        break\n                      }\n                      op.left = left.left\n                    }\n                  }\n                  nextRound.push(op)\n                }\n                operationsToAdd = []\n                while (nextRound.length > 0) {\n                  var add = nextRound\n                  nextRound = []\n                  for (i = 0; i < add.length; i++) {\n                    op = add[i]\n                    if (op.struct === 'Insert') {\n                      var ready = true\n                      for (let j = i + 1; j < add.length; j++) {\n                        let _op = add[j]\n                        if (Y.utils.compareIds(_op.id, op.left)) {\n                          ready = false\n                          break\n                        }\n                      }\n                      if (ready) {\n                        for (let j = 0; j < nextRound.length; j++) {\n                          let _op = add[j]\n                          if (Y.utils.compareIds(_op.id, op.left)) {\n                            ready = false\n                            break\n                          }\n                        }\n                      }\n                      if (!ready) {\n                        // it is necessary to execute left first\n                        nextRound.push(op)\n                        continue\n                      }\n                    }\n                    yield* this.store.operationAdded(this, op, true)\n                  }\n                }\n              })\n            }\n          }\n        }, false)\n      }\n      * operationAdded (transaction, op, noAdd) {\n        yield* super.operationAdded(transaction, op)\n        if (!noAdd) {\n          window.localStorage[this.operationAddedNamespace] = JSON.stringify(op)\n        }\n      }\n      transact (makeGen) {\n        var transaction = this.db != null ? new Transaction(this) : null\n        var store = this\n\n        var gen = makeGen.call(transaction)\n        handleTransactions(gen.next())\n\n        function handleTransactions (result) {\n          var request = result.value\n          if (result.done) {\n            makeGen = store.getNextRequest()\n            if (makeGen != null) {\n              if (transaction == null && store.db != null) {\n                transaction = new Transaction(store)\n              }\n              gen = makeGen.call(transaction)\n              handleTransactions(gen.next())\n            } // else no transaction in progress!\n            return\n          }\n          console.log('new request', request.source != null ? request.source.name : null)\n          if (request.constructor === window.IDBRequest) {\n            request.onsuccess = function () {\n              var res = request.result\n              if (res != null && res.constructor === window.IDBCursorWithValue) {\n                res = res.value\n              }\n              handleTransactions(gen.next(res))\n            }\n            request.onerror = function (err) {\n              gen.throw(err)\n            }\n          } else if (request.constructor === window.IDBCursor) {\n            request.onsuccess = function () {\n              handleTransactions(gen.next(request.result != null ? request.result.value : null))\n            }\n            request.onerror = function (err) {\n              gen.throw(err)\n            }\n          } else if (request.constructor === window.IDBOpenDBRequest) {\n            request.onsuccess = function (event) {\n              var db = event.target.result\n              handleTransactions(gen.next(db))\n            }\n            request.onerror = function () {\n              gen.throw(\"Couldn't open IndexedDB database!\")\n            }\n            request.onupgradeneeded = function (event) {\n              var db = event.target.result\n              try {\n                delete window.localStorage[JSON.stringify(['Yjs_indexeddb', store.options.namespace])]\n                db.deleteObjectStore('OperationStore')\n                db.deleteObjectStore('DeleteStore')\n                db.deleteObjectStore('StateStore')\n              } catch (e) {}\n              db.createObjectStore('OperationStore', {keyPath: 'id'})\n              db.createObjectStore('DeleteStore', {keyPath: 'id'})\n              db.createObjectStore('StateStore', {keyPath: 'id'})\n            }\n          } else {\n            gen.throw('You must not yield this type!')\n          }\n        }\n      }\n      // TODO: implement \"free\"..\n      * destroy () {\n        this.db.close()\n        yield window.indexedDB.deleteDatabase(this.options.namespace)\n      }\n    }\n    Y.extend('indexeddb', OperationStore)\n  })\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* global Y */\n'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction extend(Y) {\n  Y.requestModules(['memory']).then(function () {\n    var Store = function () {\n      function Store(transaction, name) {\n        _classCallCheck(this, Store);\n\n        this.store = transaction.objectStore(name);\n      }\n\n      _createClass(Store, [{\n        key: 'find',\n        value: regeneratorRuntime.mark(function find(id) {\n          return regeneratorRuntime.wrap(function find$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return this.store.get(id);\n\n                case 2:\n                  return _context.abrupt('return', _context.sent);\n\n                case 3:\n                case 'end':\n                  return _context.stop();\n              }\n            }\n          }, find, this);\n        })\n      }, {\n        key: 'put',\n        value: regeneratorRuntime.mark(function put(v) {\n          return regeneratorRuntime.wrap(function put$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return this.store.put(v);\n\n                case 2:\n                case 'end':\n                  return _context2.stop();\n              }\n            }\n          }, put, this);\n        })\n      }, {\n        key: 'delete',\n        value: regeneratorRuntime.mark(function _delete(id) {\n          return regeneratorRuntime.wrap(function _delete$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _context3.next = 2;\n                  return this.store.delete(id);\n\n                case 2:\n                case 'end':\n                  return _context3.stop();\n              }\n            }\n          }, _delete, this);\n        })\n      }, {\n        key: 'findWithLowerBound',\n        value: regeneratorRuntime.mark(function findWithLowerBound(start) {\n          return regeneratorRuntime.wrap(function findWithLowerBound$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return this.store.openCursor(window.IDBKeyRange.lowerBound(start));\n\n                case 2:\n                  return _context4.abrupt('return', _context4.sent);\n\n                case 3:\n                case 'end':\n                  return _context4.stop();\n              }\n            }\n          }, findWithLowerBound, this);\n        })\n      }, {\n        key: 'findWithUpperBound',\n        value: regeneratorRuntime.mark(function findWithUpperBound(end) {\n          return regeneratorRuntime.wrap(function findWithUpperBound$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  _context5.next = 2;\n                  return this.store.openCursor(window.IDBKeyRange.upperBound(end), 'prev');\n\n                case 2:\n                  return _context5.abrupt('return', _context5.sent);\n\n                case 3:\n                case 'end':\n                  return _context5.stop();\n              }\n            }\n          }, findWithUpperBound, this);\n        })\n      }, {\n        key: 'findNext',\n        value: regeneratorRuntime.mark(function findNext(id) {\n          return regeneratorRuntime.wrap(function findNext$(_context6) {\n            while (1) {\n              switch (_context6.prev = _context6.next) {\n                case 0:\n                  return _context6.delegateYield(this.findWithLowerBound([id[0], id[1] + 1]), 't0', 1);\n\n                case 1:\n                  return _context6.abrupt('return', _context6.t0);\n\n                case 2:\n                case 'end':\n                  return _context6.stop();\n              }\n            }\n          }, findNext, this);\n        })\n      }, {\n        key: 'findPrev',\n        value: regeneratorRuntime.mark(function findPrev(id) {\n          return regeneratorRuntime.wrap(function findPrev$(_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  return _context7.delegateYield(this.findWithUpperBound([id[0], id[1] - 1]), 't0', 1);\n\n                case 1:\n                  return _context7.abrupt('return', _context7.t0);\n\n                case 2:\n                case 'end':\n                  return _context7.stop();\n              }\n            }\n          }, findPrev, this);\n        })\n      }, {\n        key: 'iterate',\n        value: regeneratorRuntime.mark(function iterate(t, start, end, gen) {\n          var range, cursorResult;\n          return regeneratorRuntime.wrap(function iterate$(_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  range = null;\n\n                  if (start != null && end != null) {\n                    range = window.IDBKeyRange.bound(start, end);\n                  } else if (start != null) {\n                    range = window.IDBKeyRange.lowerBound(start);\n                  } else if (end != null) {\n                    range = window.IDBKeyRange.upperBound(end);\n                  }\n\n                  if (range != null) {\n                    cursorResult = this.store.openCursor(range);\n                  } else {\n                    cursorResult = this.store.openCursor();\n                  }\n\n                case 3:\n                  _context8.next = 5;\n                  return cursorResult;\n\n                case 5:\n                  _context8.t0 = _context8.sent;\n\n                  if (!(_context8.t0 != null)) {\n                    _context8.next = 11;\n                    break;\n                  }\n\n                  return _context8.delegateYield(gen.call(t, cursorResult.result.value), 't1', 8);\n\n                case 8:\n                  cursorResult.result.continue();\n                  _context8.next = 3;\n                  break;\n\n                case 11:\n                case 'end':\n                  return _context8.stop();\n              }\n            }\n          }, iterate, this);\n        })\n      }, {\n        key: 'flush',\n        value: regeneratorRuntime.mark(function flush() {\n          return regeneratorRuntime.wrap(function flush$(_context9) {\n            while (1) {\n              switch (_context9.prev = _context9.next) {\n                case 0:\n                case 'end':\n                  return _context9.stop();\n              }\n            }\n          }, flush, this);\n        })\n      }]);\n\n      return Store;\n    }();\n\n    function createStoreClone(Store) {\n      var Clone = function (_Store) {\n        _inherits(Clone, _Store);\n\n        function Clone() {\n          _classCallCheck(this, Clone);\n\n          var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Clone).apply(this, arguments));\n\n          _this.buffer = [];\n          _this._copyTo = null;\n          return _this;\n        }\n        // copy to this store\n        // it may be neccessary to reset this every time you create a transaction\n\n        _createClass(Clone, [{\n          key: 'copyTo',\n          value: function copyTo(store) {\n            this._copyTo = store;\n            return this;\n          }\n        }, {\n          key: 'put',\n          value: regeneratorRuntime.mark(function put(v, dontCopy) {\n            return regeneratorRuntime.wrap(function put$(_context10) {\n              while (1) {\n                switch (_context10.prev = _context10.next) {\n                  case 0:\n                    if (!dontCopy) {\n                      this.buffer.push(this._copyTo.put(v));\n                    }\n                    return _context10.delegateYield(_get(Object.getPrototypeOf(Clone.prototype), 'put', this).call(this, v), 't0', 2);\n\n                  case 2:\n                  case 'end':\n                    return _context10.stop();\n                }\n              }\n            }, put, this);\n          })\n        }, {\n          key: 'delete',\n          value: regeneratorRuntime.mark(function _delete(id) {\n            return regeneratorRuntime.wrap(function _delete$(_context11) {\n              while (1) {\n                switch (_context11.prev = _context11.next) {\n                  case 0:\n                    this.buffer.push(this._copyTo.delete(id));\n                    return _context11.delegateYield(_get(Object.getPrototypeOf(Clone.prototype), 'delete', this).call(this, id), 't0', 2);\n\n                  case 2:\n                  case 'end':\n                    return _context11.stop();\n                }\n              }\n            }, _delete, this);\n          })\n        }, {\n          key: 'flush',\n          value: regeneratorRuntime.mark(function flush() {\n            var i;\n            return regeneratorRuntime.wrap(function flush$(_context12) {\n              while (1) {\n                switch (_context12.prev = _context12.next) {\n                  case 0:\n                    return _context12.delegateYield(_get(Object.getPrototypeOf(Clone.prototype), 'flush', this).call(this), 't0', 1);\n\n                  case 1:\n                    i = 0;\n\n                  case 2:\n                    if (!(i < this.buffer.length)) {\n                      _context12.next = 7;\n                      break;\n                    }\n\n                    return _context12.delegateYield(this.buffer[i], 't1', 4);\n\n                  case 4:\n                    i++;\n                    _context12.next = 2;\n                    break;\n\n                  case 7:\n                    return _context12.delegateYield(this._copyTo.flush(), 't2', 8);\n\n                  case 8:\n                  case 'end':\n                    return _context12.stop();\n                }\n              }\n            }, flush, this);\n          })\n        }]);\n\n        return Clone;\n      }(Store);\n\n      return Clone;\n    }\n    Y.utils.createStoreClone = createStoreClone;\n\n    var BufferedStore = Y.utils.createSmallLookupBuffer(Store);\n    var ClonedStore = Y.utils.createStoreClone(Y.utils.RBTree);\n\n    var Transaction = function (_Y$Transaction) {\n      _inherits(Transaction, _Y$Transaction);\n\n      function Transaction(store) {\n        _classCallCheck(this, Transaction);\n\n        var _this2 = _possibleConstructorReturn(this, Object.getPrototypeOf(Transaction).call(this, store));\n\n        var transaction = store.db.transaction(['OperationStore', 'StateStore', 'DeleteStore'], 'readwrite');\n        _this2.store = store;\n        _this2.ss = new BufferedStore(transaction, 'StateStore');\n        _this2.os = new BufferedStore(transaction, 'OperationStore');\n        _this2._ds = new BufferedStore(transaction, 'DeleteStore');\n        _this2.ds = store.dsClone.copyTo(_this2._ds);\n        return _this2;\n      }\n\n      return Transaction;\n    }(Y.Transaction);\n\n    var OperationStore = function (_Y$AbstractDatabase) {\n      _inherits(OperationStore, _Y$AbstractDatabase);\n\n      function OperationStore(y, options) {\n        _classCallCheck(this, OperationStore);\n\n        // dsClone is persistent over transactions!\n        // _ds is not\n\n        var _this3 = _possibleConstructorReturn(this, Object.getPrototypeOf(OperationStore).call(this, y, options));\n\n        _this3.dsClone = new ClonedStore();\n\n        if (options == null) {\n          options = {};\n        }\n        _this3.options = options;\n        if (options.namespace == null) {\n          if (y.options.connector.room == null) {\n            throw new Error('IndexedDB: expect a string (options.namespace)! (you can also skip this step if your connector has a room property)');\n          } else {\n            options.namespace = y.options.connector.room;\n          }\n        }\n        if (options.idbVersion != null) {\n          _this3.idbVersion = options.idbVersion;\n        } else {\n          _this3.idbVersion = 5;\n        }\n        var store = _this3;\n        // initialize database!\n        _this3.requestTransaction(regeneratorRuntime.mark(function _callee() {\n          return regeneratorRuntime.wrap(function _callee$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  _context13.next = 2;\n                  return window.indexedDB.open(options.namespace, store.idbVersion);\n\n                case 2:\n                  store.db = _context13.sent;\n\n                case 3:\n                case 'end':\n                  return _context13.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n        if (options.cleanStart) {\n          delete window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])];\n          _this3.requestTransaction(regeneratorRuntime.mark(function _callee2() {\n            return regeneratorRuntime.wrap(function _callee2$(_context14) {\n              while (1) {\n                switch (_context14.prev = _context14.next) {\n                  case 0:\n                    _context14.next = 2;\n                    return this.os.store.clear();\n\n                  case 2:\n                    _context14.next = 4;\n                    return this._ds.store.clear();\n\n                  case 4:\n                    _context14.next = 6;\n                    return this.ss.store.clear();\n\n                  case 6:\n                  case 'end':\n                    return _context14.stop();\n                }\n              }\n            }, _callee2, this);\n          }));\n        }\n        _this3.whenUserIdSet(function (userid) {\n          if (window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] == null) {\n            window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] = JSON.stringify([userid, 0]);\n          }\n        });\n        _this3.requestTransaction(regeneratorRuntime.mark(function _callee4() {\n          var uid, nextuid;\n          return regeneratorRuntime.wrap(function _callee4$(_context16) {\n            while (1) {\n              switch (_context16.prev = _context16.next) {\n                case 0:\n                  // this should be executed after the previous two defined transactions\n                  // after we computed the upgrade event (see `yield indexedDB.open(..)`), we can check if userid is still stored on localstorage\n                  uid = window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])];\n\n                  if (uid != null) {\n                    store.setUserId(uid);\n                    nextuid = JSON.parse(uid);\n\n                    nextuid[1] = nextuid[1] + 1;\n                    window.localStorage[JSON.stringify(['Yjs_indexeddb', options.namespace])] = JSON.stringify(nextuid);\n                  }\n                  // copy from persistent Store to not persistent StoreClone. (there could already be content in Store)\n                  return _context16.delegateYield(this._ds.iterate(this, null, null, regeneratorRuntime.mark(function _callee3(o) {\n                    return regeneratorRuntime.wrap(function _callee3$(_context15) {\n                      while (1) {\n                        switch (_context15.prev = _context15.next) {\n                          case 0:\n                            return _context15.delegateYield(this.ds.put(o, true), 't0', 1);\n\n                          case 1:\n                          case 'end':\n                            return _context15.stop();\n                        }\n                      }\n                    }, _callee3, this);\n                  })), 't0', 3);\n\n                case 3:\n                case 'end':\n                  return _context16.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n        _this3.operationAddedNamespace = JSON.stringify(['__YJS__', _this3.options.namespace]);\n        var operationsToAdd = [];\n        window.addEventListener('storage', function (event) {\n          if (event.key === store.operationAddedNamespace) {\n            operationsToAdd.push(JSON.parse(event.newValue));\n            var op, i; // helper variables\n            if (operationsToAdd.length === 1) {\n              store.requestTransaction(regeneratorRuntime.mark(function _callee5() {\n                var nextRound, left, add, ready, j, _op;\n\n                return regeneratorRuntime.wrap(function _callee5$(_context17) {\n                  while (1) {\n                    switch (_context17.prev = _context17.next) {\n                      case 0:\n                        /* about nextRound:\n                           if op is not a delete, we retrieve it again from the db\n                           then it could be true that op.left is not yet added to store\n                            - but the types _change function expects that it is..\n                           In this case left has to be executed first\n                            What is left to say: we only put ready to execute ops in nextRound!\n                            TODO: implement a smart buffer in eventHelper!!!!!\n                        */\n                        nextRound = [];\n                        i = 0;\n\n                      case 2:\n                        if (!(i < operationsToAdd.length)) {\n                          _context17.next = 19;\n                          break;\n                        }\n\n                        op = operationsToAdd[i];\n\n                        if (!(op.struct !== 'Delete')) {\n                          _context17.next = 15;\n                          break;\n                        }\n\n                        return _context17.delegateYield(this.getOperation(op.id), 't0', 6);\n\n                      case 6:\n                        op = _context17.t0;\n\n                      case 7:\n                        if (!(op.left != null)) {\n                          _context17.next = 15;\n                          break;\n                        }\n\n                        return _context17.delegateYield(this.getOperation(op.left), 't1', 9);\n\n                      case 9:\n                        left = _context17.t1;\n\n                        if (left.deleted) {\n                          _context17.next = 12;\n                          break;\n                        }\n\n                        return _context17.abrupt('break', 15);\n\n                      case 12:\n                        op.left = left.left;\n                        _context17.next = 7;\n                        break;\n\n                      case 15:\n                        nextRound.push(op);\n\n                      case 16:\n                        i++;\n                        _context17.next = 2;\n                        break;\n\n                      case 19:\n                        operationsToAdd = [];\n\n                      case 20:\n                        if (!(nextRound.length > 0)) {\n                          _context17.next = 56;\n                          break;\n                        }\n\n                        add = nextRound;\n\n                        nextRound = [];\n                        i = 0;\n\n                      case 24:\n                        if (!(i < add.length)) {\n                          _context17.next = 54;\n                          break;\n                        }\n\n                        op = add[i];\n\n                        if (!(op.struct === 'Insert')) {\n                          _context17.next = 50;\n                          break;\n                        }\n\n                        ready = true;\n                        j = i + 1;\n\n                      case 29:\n                        if (!(j < add.length)) {\n                          _context17.next = 37;\n                          break;\n                        }\n\n                        _op = add[j];\n\n                        if (!Y.utils.compareIds(_op.id, op.left)) {\n                          _context17.next = 34;\n                          break;\n                        }\n\n                        ready = false;\n                        return _context17.abrupt('break', 37);\n\n                      case 34:\n                        j++;\n                        _context17.next = 29;\n                        break;\n\n                      case 37:\n                        if (!ready) {\n                          _context17.next = 47;\n                          break;\n                        }\n\n                        j = 0;\n\n                      case 39:\n                        if (!(j < nextRound.length)) {\n                          _context17.next = 47;\n                          break;\n                        }\n\n                        _op = add[j];\n\n                        if (!Y.utils.compareIds(_op.id, op.left)) {\n                          _context17.next = 44;\n                          break;\n                        }\n\n                        ready = false;\n                        return _context17.abrupt('break', 47);\n\n                      case 44:\n                        j++;\n                        _context17.next = 39;\n                        break;\n\n                      case 47:\n                        if (ready) {\n                          _context17.next = 50;\n                          break;\n                        }\n\n                        // it is necessary to execute left first\n                        nextRound.push(op);\n                        return _context17.abrupt('continue', 51);\n\n                      case 50:\n                        return _context17.delegateYield(this.store.operationAdded(this, op, true), 't2', 51);\n\n                      case 51:\n                        i++;\n                        _context17.next = 24;\n                        break;\n\n                      case 54:\n                        _context17.next = 20;\n                        break;\n\n                      case 56:\n                      case 'end':\n                        return _context17.stop();\n                    }\n                  }\n                }, _callee5, this);\n              }));\n            }\n          }\n        }, false);\n        return _this3;\n      }\n\n      _createClass(OperationStore, [{\n        key: 'operationAdded',\n        value: regeneratorRuntime.mark(function operationAdded(transaction, op, noAdd) {\n          return regeneratorRuntime.wrap(function operationAdded$(_context18) {\n            while (1) {\n              switch (_context18.prev = _context18.next) {\n                case 0:\n                  return _context18.delegateYield(_get(Object.getPrototypeOf(OperationStore.prototype), 'operationAdded', this).call(this, transaction, op), 't0', 1);\n\n                case 1:\n                  if (!noAdd) {\n                    window.localStorage[this.operationAddedNamespace] = JSON.stringify(op);\n                  }\n\n                case 2:\n                case 'end':\n                  return _context18.stop();\n              }\n            }\n          }, operationAdded, this);\n        })\n      }, {\n        key: 'transact',\n        value: function transact(makeGen) {\n          var transaction = this.db != null ? new Transaction(this) : null;\n          var store = this;\n\n          var gen = makeGen.call(transaction);\n          handleTransactions(gen.next());\n\n          function handleTransactions(result) {\n            var request = result.value;\n            if (result.done) {\n              makeGen = store.getNextRequest();\n              if (makeGen != null) {\n                if (transaction == null && store.db != null) {\n                  transaction = new Transaction(store);\n                }\n                gen = makeGen.call(transaction);\n                handleTransactions(gen.next());\n              } // else no transaction in progress!\n              return;\n            }\n            console.log('new request', request.source != null ? request.source.name : null);\n            if (request.constructor === window.IDBRequest) {\n              request.onsuccess = function () {\n                var res = request.result;\n                if (res != null && res.constructor === window.IDBCursorWithValue) {\n                  res = res.value;\n                }\n                handleTransactions(gen.next(res));\n              };\n              request.onerror = function (err) {\n                gen.throw(err);\n              };\n            } else if (request.constructor === window.IDBCursor) {\n              request.onsuccess = function () {\n                handleTransactions(gen.next(request.result != null ? request.result.value : null));\n              };\n              request.onerror = function (err) {\n                gen.throw(err);\n              };\n            } else if (request.constructor === window.IDBOpenDBRequest) {\n              request.onsuccess = function (event) {\n                var db = event.target.result;\n                handleTransactions(gen.next(db));\n              };\n              request.onerror = function () {\n                gen.throw(\"Couldn't open IndexedDB database!\");\n              };\n              request.onupgradeneeded = function (event) {\n                var db = event.target.result;\n                try {\n                  delete window.localStorage[JSON.stringify(['Yjs_indexeddb', store.options.namespace])];\n                  db.deleteObjectStore('OperationStore');\n                  db.deleteObjectStore('DeleteStore');\n                  db.deleteObjectStore('StateStore');\n                } catch (e) {}\n                db.createObjectStore('OperationStore', { keyPath: 'id' });\n                db.createObjectStore('DeleteStore', { keyPath: 'id' });\n                db.createObjectStore('StateStore', { keyPath: 'id' });\n              };\n            } else {\n              gen.throw('You must not yield this type!');\n            }\n          }\n        }\n        // TODO: implement \"free\"..\n\n      }, {\n        key: 'destroy',\n        value: regeneratorRuntime.mark(function destroy() {\n          return regeneratorRuntime.wrap(function destroy$(_context19) {\n            while (1) {\n              switch (_context19.prev = _context19.next) {\n                case 0:\n                  this.db.close();\n                  _context19.next = 3;\n                  return window.indexedDB.deleteDatabase(this.options.namespace);\n\n                case 3:\n                case 'end':\n                  return _context19.stop();\n              }\n            }\n          }, destroy, this);\n        })\n      }]);\n\n      return OperationStore;\n    }(Y.AbstractDatabase);\n\n    Y.extend('indexeddb', OperationStore);\n  });\n}\n\nmodule.exports = extend;\nif (typeof Y !== 'undefined') {\n  extend(Y);\n}\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}