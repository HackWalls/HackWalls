{"version":3,"sources":["../yjs/node_modules/browserify/node_modules/browser-pack/_prelude.js","src/Richtext.js","y-richtext.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","extend","Y","requestModules","then","YRichtext","_Y$Array$typeDefiniti","os","_model","_content","this","_this","getPrototypeOf","instances","_createClass","key","unbindQuill","editor","_get","map","v","val","join","createNewOp","attrs","name","op","attributes","insert","ops","Array","push","pos","content","curPos","selection","split","curSel","endPos","delStart","delEnd","rightSel","undefined","from","to","attrName","attrValue","step2i","step2sel","antiAttrs","_v","deletes","_v2","j","del","performStep4","sel","bindQuill","apply","arguments","quill","findIndex","binding","unobserve","yCallback","off","quillCallback","splice","mutualExcluse","token","delta","select","retain","afterRetain","additionalContent","getText","insertText","formatText","events","event","type","position","insertSel","index","newSel","selectionStart","selectionEnd","k","delLength","deleteText","x","checkUpdate","setContents","toOTOps","on","observe","regeneratorRuntime","mark","_changed","_args","wrap","_context","prev","next","forEach","delegateYield","typeDefinition","stop","get","toString","utils","CustomType","class","struct","initType","YTextInitializer","model","_context2","Struct","List","c","id","JSON","stringify","t0","abrupt","defineProperties","target","props","descriptor","defineProperty","protoProps","staticProps","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getter"],"mappings":"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","file":"y-richtext.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y) {\n  Y.requestModules(['Array']).then(function () {\n    class YRichtext extends Y.Array.typeDefinition['class'] {\n      constructor (os, _model, _content) {\n        super(os, _model, _content)\n        this.instances = []\n      }\n      _destroy () {\n        for (var i = this.instances.length - 1; i >= 0; i--) {\n          this.unbindQuill(this.instances[i].editor)\n        }\n        super._destroy()\n      }\n      get length () {\n        /*\n          TODO: I must not use observe to compute the length.\n          But since I inherit from Y.Array, I can't set observe\n          the changes at the right momet (for that I would require direct access to EventHandler).\n          This is the most elegant solution, for now.\n          But at some time you should re-write Y.Richtext more elegantly!!\n        */\n        return this.toString().length\n      }\n      toString () {\n        return this._content.map(function (v) {\n          if (typeof v.val === 'string') {\n            return v.val\n          }\n        }).join('')\n      }\n      toOTOps () {\n        var ops = []\n        var op = {\n          insert: [],\n          attributes: {}\n        }\n        function createNewOp () {\n          var attrs = {}\n          // copy attributes\n          for (var name in op.attributes) {\n            attrs[name] = op.attributes[name]\n          }\n          op = {\n            insert: [],\n            attributes: attrs\n          }\n        }\n        var i = 0\n        for (; i < this._content.length; i++) {\n          let v = this._content[i].val\n          if (v.constructor === Array) {\n            if (op.insert.length > 0) {\n              op.insert = op.insert.join('')\n              ops.push(op)\n              createNewOp()\n            }\n            if (v[1] === null) {\n              delete op.attributes[v[0]]\n            } else {\n              op.attributes[v[0]] = v[1]\n            }\n          } else {\n            op.insert.push(v)\n          }\n        }\n        if (op.insert.length > 0) {\n          op.insert = op.insert.join('')\n          ops.push(op)\n        }\n        return ops\n      }\n      insert (pos, content) {\n        var curPos = 0\n        var selection = {}\n        for (var i = 0; i < this._content.length; i++) {\n          if (curPos === pos) {\n            break\n          }\n          var v = this._content[i].val\n          if (typeof v === 'string') {\n            curPos++\n          } else if (v.constructor === Array) {\n            if (v[1] === null) {\n              delete selection[v[0]]\n            } else {\n              selection[v[0]] = v[1]\n            }\n          }\n        }\n        super.insert(i, content.split(''))\n        return selection\n      }\n      delete (pos, length) {\n        /*\n          let x = to be deleted string\n          let s = some string\n          let * = some selection\n          E.g.\n          sss*s***x*xxxxx***xx*x**ss*s\n               |---delete-range--|\n             delStart         delEnd\n\n          We'll check the following\n          * is it possible to delete some of the selections?\n            1. a dominating selection to the right could be the same as the selection (curSel) to delStart\n            2. a selections could be overwritten by another selection to the right\n        */\n        var curPos = 0\n        var curSel = {}\n        var endPos = pos + length\n        if (length <= 0) return\n        var delStart // relative to _content\n        var delEnd // ..\n        var v, i // helper variable for elements of _content\n\n        for (delStart = 0; curPos < pos && delStart < this._content.length; delStart++) {\n          v = this._content[delStart].val\n          if (typeof v === 'string') {\n            curPos++\n          } else if (v.constructor === Array) {\n            curSel[v[0]] = v[1]\n          }\n        }\n        for (delEnd = delStart; curPos < endPos && delEnd < this._content.length; delEnd++) {\n          v = this._content[delEnd].val\n          if (typeof v === 'string') {\n            curPos++\n          }\n        }\n        if (delEnd === this._content.length) {\n          // yay, you can delete everything without checking\n          for (i = delEnd - 1; i >= delStart; i--) {\n            v = this._content[i].val\n            super.delete(i, 1)\n          }\n        } else {\n          if (typeof v === 'string') {\n            delEnd--\n          }\n          var rightSel = {}\n          for (i = delEnd; i >= delStart; i--) {\n            v = this._content[i].val\n            if (v.constructor === Array) {\n              if (rightSel[v[0]] === undefined) {\n                if (v[1] === curSel[v[0]]) {\n                  // case 1.\n                  super.delete(i, 1)\n                }\n                rightSel[v[0]] = v[1]\n              } else {\n                // case 2.\n                super.delete(i, 1)\n              }\n            } else if (typeof v === 'string') {\n              // always delete the strings\n              super.delete(i, 1)\n            }\n          }\n        }\n      }\n      /*\n      1. get selection attributes from position $from\n         (name it antiAttrs, and we'll use it to make sure that selection ends in antiAttrs)\n      2. Insert selection $attr, if necessary\n      3. Between from and to, we'll delete all selections that do not match $attr.\n         Furthermore, we'll update antiAttrs, if necessary\n      4. In the end well insert a selection that makes sure that selection($to) ends in antiAttrs\n      */\n      select (from, to, attrName, attrValue) {\n        if (from == null || to == null || attrName == null || attrValue === undefined) {\n          throw new Error('You must define four parameters')\n        } else {\n          var step2i\n          var step2sel\n          var antiAttrs = [attrName, null]\n          var curPos = 0\n          var i = 0\n          // 1. compute antiAttrs\n          for (; i < this._content.length; i++) {\n            let v = this._content[i].val\n            if (curPos === from) {\n              break\n            }\n            if (v.constructor === Array) {\n              if (v[0] === attrName) {\n                antiAttrs[1] = v[1]\n              }\n            } else if (typeof v === 'string') {\n              curPos++\n            }\n          }\n          // 2. Insert attr\n          if (antiAttrs[1] !== attrValue) {\n            // we'll execute this later\n            step2i = i\n            step2sel = [attrName, attrValue]\n          }\n\n          // 3. update antiAttrs, modify selection\n          var deletes = []\n          for (; i < this._content.length; i++) {\n            let v = this._content[i].val\n            if (curPos === to) {\n              break\n            }\n            if (v.constructor === Array) {\n              if (v[0] === attrName) {\n                antiAttrs[1] = v[1]\n                deletes.push(i)\n              }\n            } else if (typeof v === 'string') {\n              curPos++\n            }\n          }\n          // actually delete the found selections\n          // also.. we have to delete from right to left (so that the positions dont change)\n          for (var j = deletes.length - 1; j >= 0; j--) {\n            var del = deletes[j]\n            super.delete(del, 1)\n            // update i, rel. to\n            if (del < i) {\n              i--\n            }\n            if (del < step2i) {\n              step2i--\n            }\n          }\n          // 4. Update selection to match antiAttrs\n          // never insert, if not necessary\n          //  1. when it is the last position ~ i < _content.length)\n          //  2. when a similar attrName already exists between i and the next character\n          if (antiAttrs[1] !== attrValue && i < this._content.length) { // check 1.\n            var performStep4 = true\n            var v\n            for (j = i; j < this._content.length; j++) {\n              v = this._content[j].val\n              if (v.constructor !== Array) {\n                break\n              }\n              if (v[0] === attrName) {\n                performStep4 = false // check 2.\n                if (v[1] === attrValue) {\n                  super.delete(j, 1)\n                }\n                break\n              }\n            }\n            if (performStep4) {\n              var sel = [attrName, antiAttrs[1]]\n              super.insert(i, [sel])\n            }\n          }\n          if (step2i != null) {\n            super.insert(step2i, [step2sel])\n            // if there are some selections to the left of step2sel, delete them if possible\n            // * have same attribute name\n            // * no insert between step2sel and selection\n            for (j = step2i - 1; j >= 0; j--) {\n              v = this._content[j].val\n              if (v.constructor !== Array) {\n                break\n              }\n              if (v[0] === attrName) {\n                super.delete(j, 1)\n              }\n            }\n          }\n        }\n      }\n      bind () {\n        this.bindQuill.apply(this, arguments)\n      }\n      unbindQuill (quill) {\n        var i = this.instances.findIndex(function (binding) {\n          return binding.editor === quill\n        })\n        if (i >= 0) {\n          var binding = this.instances[i]\n          this.unobserve(binding.yCallback)\n          binding.editor.off('text-change', binding.quillCallback)\n          this.instances.splice(i, 1)\n        }\n      }\n      bindQuill (quill) {\n        var self = this\n\n        // this function makes sure that either the\n        // quill event is executed, or the yjs observer is executed\n        var token = true\n        function mutualExcluse (f) {\n          if (token) {\n            token = false\n            try {\n              f()\n            } catch (e) {\n              token = true\n              throw new Error(e)\n            }\n            token = true\n          }\n        }\n\n        quill.setContents(this.toOTOps())\n\n        function quillCallback (delta) {\n          mutualExcluse(function () {\n            var pos = 0\n            var name // helper variable\n            for (var i = 0; i < delta.ops.length; i++) {\n              var op = delta.ops[i]\n              if (op.insert != null) {\n                var attrs = self.insert(pos, op.insert)\n                // create new selection\n                for (name in op.attributes) {\n                  if (op.attributes[name] !== attrs[name]) {\n                    self.select(pos, pos + op.insert.length, name, op.attributes[name])\n                  }\n                }\n                // not-existence of an attribute in op.attributes denotes\n                // that we have to unselect (set to null)\n                for (name in attrs) {\n                  if (op.attributes == null || attrs[name] !== op.attributes[name]) {\n                    self.select(pos, pos + op.insert.length, name, null)\n                  }\n                }\n                pos += op.insert.length\n              }\n              if (op.delete != null) {\n                self.delete(pos, op.delete)\n              }\n              if (op.retain != null) {\n                var afterRetain = pos + op.retain\n                if (afterRetain > self.length) {\n                  let additionalContent = quill.getText(self.length)\n                  quill.insertText(self.length, additionalContent)\n                  // quill.deleteText(self.length + additionalContent.length, quill.getLength())\n                  for (name in op.attributes) {\n                    quill.formatText(self.length + additionalContent.length, self.length + additionalContent.length * 2, name, null)\n                    // quill.deleteText(self.length, self.length + op.retain)\n                  }\n                  self.insert(self.length, additionalContent)\n                  // op.attributes = null\n                }\n                for (name in op.attributes) {\n                  self.select(pos, pos + op.retain, name, op.attributes[name])\n                  quill.formatText(pos, pos + op.retain, name, op.attributes[name])\n                }\n                pos = afterRetain\n              }\n            }\n          })\n        }\n        quill.on('text-change', quillCallback)\n\n        function yCallback (events) {\n          mutualExcluse(function () {\n            var v // helper variable\n            var curSel // helper variable (current selection)\n            for (var i = 0; i < events.length; i++) {\n              var event = events[i]\n              if (event.type === 'insert') {\n                if (typeof event.value === 'string') {\n                  var position = 0\n                  var insertSel = {}\n                  for (var l = event.index - 1; l >= 0; l--) {\n                    v = self._content[l].val\n                    if (typeof v === 'string') {\n                      position++\n                    } else if (v.constructor === Array && typeof insertSel[v[0]] === 'undefined') {\n                      insertSel[v[0]] = v[1]\n                    }\n                  }\n                  quill.insertText(position, event.value, insertSel)\n                } else if (event.value.constructor === Array) {\n                  // a new selection is created\n                  // find left selection that matches newSel[0]\n                  curSel = null\n                  var newSel = event.value\n                  // denotes the start position of the selection\n                  // (without the selection objects)\n                  var selectionStart = 0\n                  for (var j = event.index - 1; j >= 0; j--) {\n                    v = self._content[j].val\n                    if (v.constructor === Array) {\n                      // check if v matches newSel\n                      if (newSel[0] === v[0]) {\n                        // found a selection\n                        // update curSel and go to next step\n                        curSel = v[1]\n                        break\n                      }\n                    } else if (typeof v === 'string') {\n                      selectionStart++\n                    }\n                  }\n                  // make sure to decrement j, so we correctly compute selectionStart\n                  for (; j >= 0; j--) {\n                    v = self._content[j].val\n                    if (typeof v === 'string') {\n                      selectionStart++\n                    }\n                  }\n                  // either a selection was found {then curSel was updated}, or not (then curSel = null)\n                  if (newSel[1] === curSel) {\n                    // both are the same. not necessary to do anything\n                    return\n                  }\n                  // now find out the range over which newSel has to be created\n                  var selectionEnd = selectionStart\n                  for (var k = event.index + 1; k < self._content.length; k++) {\n                    v = self._content[k].val\n                    if (v.constructor === Array) {\n                      if (v[0] === newSel[0]) {\n                        // found another selection with same attr name\n                        break\n                      }\n                    } else if (typeof v === 'string') {\n                      selectionEnd++\n                    }\n                  }\n                  // create a selection from selectionStart to selectionEnd\n                  if (selectionStart !== selectionEnd) {\n                    quill.formatText(selectionStart, selectionEnd, newSel[0], newSel[1])\n                  }\n                }\n              } else if (event.type === 'delete') {\n                if (typeof event.value === 'string') { // TODO: see button. add  || `event.length > 1`\n                  // only if these conditions are true, we have to actually check if we have to delete sth.\n                  // Then we have to check if between pos and pos + event.length are selections:\n                  // delete till pos + (event.length - number of selections)\n                  var pos = 0\n                  for (var u = 0; u < event.index; u++) {\n                    v = self._content[u].val\n                    if (typeof v === 'string') {\n                      pos++\n                    }\n                  }\n                  var delLength = event.length\n                  /* TODO!!\n                  they do not exist anymore.. so i can't query. you have to query over event.value(s) - but that not yet implemented\n                  for (; i < event.index + event.length; i++) {\n                    if (self._content[i].val.constructor === Array) {\n                      delLength--\n                    }\n                  }*/\n                  quill.deleteText(pos, pos + delLength)\n                } else if (event.value.constructor === Array) {\n                  curSel = null\n                  var from = 0\n                  var x\n                  for (x = event.index - 1; x >= 0; x--) {\n                    v = self._content[x].val\n                    if (v.constructor === Array) {\n                      if (v[0] === event.value[0]) {\n                        curSel = v[1]\n                        break\n                      }\n                    } else if (typeof v === 'string') {\n                      from++\n                    }\n                  }\n                  for (; x >= 0; x--) {\n                    v = self._content[x].val\n                    if (typeof v === 'string') {\n                      from++\n                    }\n                  }\n                  var to = from\n                  for (x = event.index; x < self._content.length; x++) {\n                    v = self._content[x].val\n                    if (v.constructor === Array) {\n                      if (v[0] === event.value[0]) {\n                        break\n                      }\n                    } else if (typeof v === 'string') {\n                      to++\n                    }\n                  }\n                  if (curSel !== event.value[1] && from !== to) {\n                    quill.formatText(from, to, event.value[0], curSel)\n                  }\n                }\n              }\n            }\n            quill.editor.checkUpdate()\n          })\n        }\n        this.observe(yCallback)\n        this.instances.push({\n          editor: quill,\n          yCallback: yCallback,\n          quillCallback: quillCallback\n        })\n      }\n      * _changed () {\n        this.instances.forEach(function (instance) {\n          instance.editor.editor.checkUpdate()\n        })\n        yield* Y.Array.typeDefinition['class'].prototype._changed.apply(this, arguments)\n      }\n    }\n    Y.extend('Richtext', new Y.utils.CustomType({\n      name: 'Richtext',\n      class: YRichtext,\n      struct: 'List',\n      initType: function * YTextInitializer (os, model) {\n        var _content = yield* Y.Struct.List.map.call(this, model, function (c) {\n          return {\n            id: JSON.stringify(c.id),\n            val: c.content\n          }\n        })\n        return new YRichtext(os, model.id, _content)\n      }\n    }))\n  })\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* global Y */\n'use strict';\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction extend(Y) {\n  Y.requestModules(['Array']).then(function () {\n    var YRichtext = (function (_Y$Array$typeDefiniti) {\n      _inherits(YRichtext, _Y$Array$typeDefiniti);\n\n      function YRichtext(os, _model, _content) {\n        _classCallCheck(this, YRichtext);\n\n        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(YRichtext).call(this, os, _model, _content));\n\n        _this.instances = [];\n        return _this;\n      }\n\n      _createClass(YRichtext, [{\n        key: '_destroy',\n        value: function _destroy() {\n          for (var i = this.instances.length - 1; i >= 0; i--) {\n            this.unbindQuill(this.instances[i].editor);\n          }\n          _get(Object.getPrototypeOf(YRichtext.prototype), '_destroy', this).call(this);\n        }\n      }, {\n        key: 'toString',\n        value: function toString() {\n          return this._content.map(function (v) {\n            if (typeof v.val === 'string') {\n              return v.val;\n            }\n          }).join('');\n        }\n      }, {\n        key: 'toOTOps',\n        value: function toOTOps() {\n          var ops = [];\n          var op = {\n            insert: [],\n            attributes: {}\n          };\n          function createNewOp() {\n            var attrs = {};\n            // copy attributes\n            for (var name in op.attributes) {\n              attrs[name] = op.attributes[name];\n            }\n            op = {\n              insert: [],\n              attributes: attrs\n            };\n          }\n          var i = 0;\n          for (; i < this._content.length; i++) {\n            var v = this._content[i].val;\n            if (v.constructor === Array) {\n              if (op.insert.length > 0) {\n                op.insert = op.insert.join('');\n                ops.push(op);\n                createNewOp();\n              }\n              if (v[1] === null) {\n                delete op.attributes[v[0]];\n              } else {\n                op.attributes[v[0]] = v[1];\n              }\n            } else {\n              op.insert.push(v);\n            }\n          }\n          if (op.insert.length > 0) {\n            op.insert = op.insert.join('');\n            ops.push(op);\n          }\n          return ops;\n        }\n      }, {\n        key: 'insert',\n        value: function insert(pos, content) {\n          var curPos = 0;\n          var selection = {};\n          for (var i = 0; i < this._content.length; i++) {\n            if (curPos === pos) {\n              break;\n            }\n            var v = this._content[i].val;\n            if (typeof v === 'string') {\n              curPos++;\n            } else if (v.constructor === Array) {\n              if (v[1] === null) {\n                delete selection[v[0]];\n              } else {\n                selection[v[0]] = v[1];\n              }\n            }\n          }\n          _get(Object.getPrototypeOf(YRichtext.prototype), 'insert', this).call(this, i, content.split(''));\n          return selection;\n        }\n      }, {\n        key: 'delete',\n        value: function _delete(pos, length) {\n          /*\n            let x = to be deleted string\n            let s = some string\n            let * = some selection\n            E.g.\n            sss*s***x*xxxxx***xx*x**ss*s\n                 |---delete-range--|\n               delStart         delEnd\n             We'll check the following\n            * is it possible to delete some of the selections?\n              1. a dominating selection to the right could be the same as the selection (curSel) to delStart\n              2. a selections could be overwritten by another selection to the right\n          */\n          var curPos = 0;\n          var curSel = {};\n          var endPos = pos + length;\n          if (length <= 0) return;\n          var delStart; // relative to _content\n          var delEnd; // ..\n          var v, i; // helper variable for elements of _content\n\n          for (delStart = 0; curPos < pos && delStart < this._content.length; delStart++) {\n            v = this._content[delStart].val;\n            if (typeof v === 'string') {\n              curPos++;\n            } else if (v.constructor === Array) {\n              curSel[v[0]] = v[1];\n            }\n          }\n          for (delEnd = delStart; curPos < endPos && delEnd < this._content.length; delEnd++) {\n            v = this._content[delEnd].val;\n            if (typeof v === 'string') {\n              curPos++;\n            }\n          }\n          if (delEnd === this._content.length) {\n            // yay, you can delete everything without checking\n            for (i = delEnd - 1; i >= delStart; i--) {\n              v = this._content[i].val;\n              _get(Object.getPrototypeOf(YRichtext.prototype), 'delete', this).call(this, i, 1);\n            }\n          } else {\n            if (typeof v === 'string') {\n              delEnd--;\n            }\n            var rightSel = {};\n            for (i = delEnd; i >= delStart; i--) {\n              v = this._content[i].val;\n              if (v.constructor === Array) {\n                if (rightSel[v[0]] === undefined) {\n                  if (v[1] === curSel[v[0]]) {\n                    // case 1.\n                    _get(Object.getPrototypeOf(YRichtext.prototype), 'delete', this).call(this, i, 1);\n                  }\n                  rightSel[v[0]] = v[1];\n                } else {\n                  // case 2.\n                  _get(Object.getPrototypeOf(YRichtext.prototype), 'delete', this).call(this, i, 1);\n                }\n              } else if (typeof v === 'string') {\n                // always delete the strings\n                _get(Object.getPrototypeOf(YRichtext.prototype), 'delete', this).call(this, i, 1);\n              }\n            }\n          }\n        }\n        /*\n        1. get selection attributes from position $from\n           (name it antiAttrs, and we'll use it to make sure that selection ends in antiAttrs)\n        2. Insert selection $attr, if necessary\n        3. Between from and to, we'll delete all selections that do not match $attr.\n           Furthermore, we'll update antiAttrs, if necessary\n        4. In the end well insert a selection that makes sure that selection($to) ends in antiAttrs\n        */\n\n      }, {\n        key: 'select',\n        value: function select(from, to, attrName, attrValue) {\n          if (from == null || to == null || attrName == null || attrValue === undefined) {\n            throw new Error('You must define four parameters');\n          } else {\n            var step2i;\n            var step2sel;\n            var antiAttrs = [attrName, null];\n            var curPos = 0;\n            var i = 0;\n            // 1. compute antiAttrs\n            for (; i < this._content.length; i++) {\n              var _v = this._content[i].val;\n              if (curPos === from) {\n                break;\n              }\n              if (_v.constructor === Array) {\n                if (_v[0] === attrName) {\n                  antiAttrs[1] = _v[1];\n                }\n              } else if (typeof _v === 'string') {\n                curPos++;\n              }\n            }\n            // 2. Insert attr\n            if (antiAttrs[1] !== attrValue) {\n              // we'll execute this later\n              step2i = i;\n              step2sel = [attrName, attrValue];\n            }\n\n            // 3. update antiAttrs, modify selection\n            var deletes = [];\n            for (; i < this._content.length; i++) {\n              var _v2 = this._content[i].val;\n              if (curPos === to) {\n                break;\n              }\n              if (_v2.constructor === Array) {\n                if (_v2[0] === attrName) {\n                  antiAttrs[1] = _v2[1];\n                  deletes.push(i);\n                }\n              } else if (typeof _v2 === 'string') {\n                curPos++;\n              }\n            }\n            // actually delete the found selections\n            // also.. we have to delete from right to left (so that the positions dont change)\n            for (var j = deletes.length - 1; j >= 0; j--) {\n              var del = deletes[j];\n              _get(Object.getPrototypeOf(YRichtext.prototype), 'delete', this).call(this, del, 1);\n              // update i, rel. to\n              if (del < i) {\n                i--;\n              }\n              if (del < step2i) {\n                step2i--;\n              }\n            }\n            // 4. Update selection to match antiAttrs\n            // never insert, if not necessary\n            //  1. when it is the last position ~ i < _content.length)\n            //  2. when a similar attrName already exists between i and the next character\n            if (antiAttrs[1] !== attrValue && i < this._content.length) {\n              // check 1.\n              var performStep4 = true;\n              var v;\n              for (j = i; j < this._content.length; j++) {\n                v = this._content[j].val;\n                if (v.constructor !== Array) {\n                  break;\n                }\n                if (v[0] === attrName) {\n                  performStep4 = false; // check 2.\n                  if (v[1] === attrValue) {\n                    _get(Object.getPrototypeOf(YRichtext.prototype), 'delete', this).call(this, j, 1);\n                  }\n                  break;\n                }\n              }\n              if (performStep4) {\n                var sel = [attrName, antiAttrs[1]];\n                _get(Object.getPrototypeOf(YRichtext.prototype), 'insert', this).call(this, i, [sel]);\n              }\n            }\n            if (step2i != null) {\n              _get(Object.getPrototypeOf(YRichtext.prototype), 'insert', this).call(this, step2i, [step2sel]);\n              // if there are some selections to the left of step2sel, delete them if possible\n              // * have same attribute name\n              // * no insert between step2sel and selection\n              for (j = step2i - 1; j >= 0; j--) {\n                v = this._content[j].val;\n                if (v.constructor !== Array) {\n                  break;\n                }\n                if (v[0] === attrName) {\n                  _get(Object.getPrototypeOf(YRichtext.prototype), 'delete', this).call(this, j, 1);\n                }\n              }\n            }\n          }\n        }\n      }, {\n        key: 'bind',\n        value: function bind() {\n          this.bindQuill.apply(this, arguments);\n        }\n      }, {\n        key: 'unbindQuill',\n        value: function unbindQuill(quill) {\n          var i = this.instances.findIndex(function (binding) {\n            return binding.editor === quill;\n          });\n          if (i >= 0) {\n            var binding = this.instances[i];\n            this.unobserve(binding.yCallback);\n            binding.editor.off('text-change', binding.quillCallback);\n            this.instances.splice(i, 1);\n          }\n        }\n      }, {\n        key: 'bindQuill',\n        value: function bindQuill(quill) {\n          var self = this;\n\n          // this function makes sure that either the\n          // quill event is executed, or the yjs observer is executed\n          var token = true;\n          function mutualExcluse(f) {\n            if (token) {\n              token = false;\n              try {\n                f();\n              } catch (e) {\n                token = true;\n                throw new Error(e);\n              }\n              token = true;\n            }\n          }\n\n          quill.setContents(this.toOTOps());\n\n          function quillCallback(delta) {\n            mutualExcluse(function () {\n              var pos = 0;\n              var name; // helper variable\n              for (var i = 0; i < delta.ops.length; i++) {\n                var op = delta.ops[i];\n                if (op.insert != null) {\n                  var attrs = self.insert(pos, op.insert);\n                  // create new selection\n                  for (name in op.attributes) {\n                    if (op.attributes[name] !== attrs[name]) {\n                      self.select(pos, pos + op.insert.length, name, op.attributes[name]);\n                    }\n                  }\n                  // not-existence of an attribute in op.attributes denotes\n                  // that we have to unselect (set to null)\n                  for (name in attrs) {\n                    if (op.attributes == null || attrs[name] !== op.attributes[name]) {\n                      self.select(pos, pos + op.insert.length, name, null);\n                    }\n                  }\n                  pos += op.insert.length;\n                }\n                if (op.delete != null) {\n                  self.delete(pos, op.delete);\n                }\n                if (op.retain != null) {\n                  var afterRetain = pos + op.retain;\n                  if (afterRetain > self.length) {\n                    var additionalContent = quill.getText(self.length);\n                    quill.insertText(self.length, additionalContent);\n                    // quill.deleteText(self.length + additionalContent.length, quill.getLength())\n                    for (name in op.attributes) {\n                      quill.formatText(self.length + additionalContent.length, self.length + additionalContent.length * 2, name, null);\n                      // quill.deleteText(self.length, self.length + op.retain)\n                    }\n                    self.insert(self.length, additionalContent);\n                    // op.attributes = null\n                  }\n                  for (name in op.attributes) {\n                    self.select(pos, pos + op.retain, name, op.attributes[name]);\n                    quill.formatText(pos, pos + op.retain, name, op.attributes[name]);\n                  }\n                  pos = afterRetain;\n                }\n              }\n            });\n          }\n          quill.on('text-change', quillCallback);\n\n          function yCallback(events) {\n            mutualExcluse(function () {\n              var v; // helper variable\n              var curSel; // helper variable (current selection)\n              for (var i = 0; i < events.length; i++) {\n                var event = events[i];\n                if (event.type === 'insert') {\n                  if (typeof event.value === 'string') {\n                    var position = 0;\n                    var insertSel = {};\n                    for (var l = event.index - 1; l >= 0; l--) {\n                      v = self._content[l].val;\n                      if (typeof v === 'string') {\n                        position++;\n                      } else if (v.constructor === Array && typeof insertSel[v[0]] === 'undefined') {\n                        insertSel[v[0]] = v[1];\n                      }\n                    }\n                    quill.insertText(position, event.value, insertSel);\n                  } else if (event.value.constructor === Array) {\n                    // a new selection is created\n                    // find left selection that matches newSel[0]\n                    curSel = null;\n                    var newSel = event.value;\n                    // denotes the start position of the selection\n                    // (without the selection objects)\n                    var selectionStart = 0;\n                    for (var j = event.index - 1; j >= 0; j--) {\n                      v = self._content[j].val;\n                      if (v.constructor === Array) {\n                        // check if v matches newSel\n                        if (newSel[0] === v[0]) {\n                          // found a selection\n                          // update curSel and go to next step\n                          curSel = v[1];\n                          break;\n                        }\n                      } else if (typeof v === 'string') {\n                        selectionStart++;\n                      }\n                    }\n                    // make sure to decrement j, so we correctly compute selectionStart\n                    for (; j >= 0; j--) {\n                      v = self._content[j].val;\n                      if (typeof v === 'string') {\n                        selectionStart++;\n                      }\n                    }\n                    // either a selection was found {then curSel was updated}, or not (then curSel = null)\n                    if (newSel[1] === curSel) {\n                      // both are the same. not necessary to do anything\n                      return;\n                    }\n                    // now find out the range over which newSel has to be created\n                    var selectionEnd = selectionStart;\n                    for (var k = event.index + 1; k < self._content.length; k++) {\n                      v = self._content[k].val;\n                      if (v.constructor === Array) {\n                        if (v[0] === newSel[0]) {\n                          // found another selection with same attr name\n                          break;\n                        }\n                      } else if (typeof v === 'string') {\n                        selectionEnd++;\n                      }\n                    }\n                    // create a selection from selectionStart to selectionEnd\n                    if (selectionStart !== selectionEnd) {\n                      quill.formatText(selectionStart, selectionEnd, newSel[0], newSel[1]);\n                    }\n                  }\n                } else if (event.type === 'delete') {\n                  if (typeof event.value === 'string') {\n                    // TODO: see button. add  || `event.length > 1`\n                    // only if these conditions are true, we have to actually check if we have to delete sth.\n                    // Then we have to check if between pos and pos + event.length are selections:\n                    // delete till pos + (event.length - number of selections)\n                    var pos = 0;\n                    for (var u = 0; u < event.index; u++) {\n                      v = self._content[u].val;\n                      if (typeof v === 'string') {\n                        pos++;\n                      }\n                    }\n                    var delLength = event.length;\n                    /* TODO!!\n                    they do not exist anymore.. so i can't query. you have to query over event.value(s) - but that not yet implemented\n                    for (; i < event.index + event.length; i++) {\n                      if (self._content[i].val.constructor === Array) {\n                        delLength--\n                      }\n                    }*/\n                    quill.deleteText(pos, pos + delLength);\n                  } else if (event.value.constructor === Array) {\n                    curSel = null;\n                    var from = 0;\n                    var x;\n                    for (x = event.index - 1; x >= 0; x--) {\n                      v = self._content[x].val;\n                      if (v.constructor === Array) {\n                        if (v[0] === event.value[0]) {\n                          curSel = v[1];\n                          break;\n                        }\n                      } else if (typeof v === 'string') {\n                        from++;\n                      }\n                    }\n                    for (; x >= 0; x--) {\n                      v = self._content[x].val;\n                      if (typeof v === 'string') {\n                        from++;\n                      }\n                    }\n                    var to = from;\n                    for (x = event.index; x < self._content.length; x++) {\n                      v = self._content[x].val;\n                      if (v.constructor === Array) {\n                        if (v[0] === event.value[0]) {\n                          break;\n                        }\n                      } else if (typeof v === 'string') {\n                        to++;\n                      }\n                    }\n                    if (curSel !== event.value[1] && from !== to) {\n                      quill.formatText(from, to, event.value[0], curSel);\n                    }\n                  }\n                }\n              }\n              quill.editor.checkUpdate();\n            });\n          }\n          this.observe(yCallback);\n          this.instances.push({\n            editor: quill,\n            yCallback: yCallback,\n            quillCallback: quillCallback\n          });\n        }\n      }, {\n        key: '_changed',\n        value: regeneratorRuntime.mark(function _changed() {\n          var _args = arguments;\n          return regeneratorRuntime.wrap(function _changed$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  this.instances.forEach(function (instance) {\n                    instance.editor.editor.checkUpdate();\n                  });\n                  return _context.delegateYield(Y.Array.typeDefinition['class'].prototype._changed.apply(this, _args), 't0', 2);\n\n                case 2:\n                case 'end':\n                  return _context.stop();\n              }\n            }\n          }, _changed, this);\n        })\n      }, {\n        key: 'length',\n        get: function get() {\n          /*\n            TODO: I must not use observe to compute the length.\n            But since I inherit from Y.Array, I can't set observe\n            the changes at the right momet (for that I would require direct access to EventHandler).\n            This is the most elegant solution, for now.\n            But at some time you should re-write Y.Richtext more elegantly!!\n          */\n          return this.toString().length;\n        }\n      }]);\n\n      return YRichtext;\n    })(Y.Array.typeDefinition['class']);\n\n    Y.extend('Richtext', new Y.utils.CustomType({\n      name: 'Richtext',\n      class: YRichtext,\n      struct: 'List',\n      initType: regeneratorRuntime.mark(function YTextInitializer(os, model) {\n        var _content;\n\n        return regeneratorRuntime.wrap(function YTextInitializer$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.delegateYield(Y.Struct.List.map.call(this, model, function (c) {\n                  return {\n                    id: JSON.stringify(c.id),\n                    val: c.content\n                  };\n                }), 't0', 1);\n\n              case 1:\n                _content = _context2.t0;\n                return _context2.abrupt('return', new YRichtext(os, model.id, _content));\n\n              case 3:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, YTextInitializer, this);\n      })\n    }));\n  });\n}\n\nmodule.exports = extend;\nif (typeof Y !== 'undefined') {\n  extend(Y);\n}\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}