{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/Array.js","y-array.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","_classCallCheck","instance","Constructor","TypeError","extend","Y","YArray","os","_model","_content","_this","this","eventHandler","utils","EventHandler","ops","userEvents","forEach","op","struct","pos","undefined","left","findIndex","c","compareIds","id","values","hasOwnProperty","splice","type","opContent","Promise","resolve","requestTransaction","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","delegateYield","getType","t0","stop","contents","content","map","val","apply","concat","push","object","index","target","_callee2","_context2","callEventListeners","_createClass","key","value","destroy","_this2","oid","_callee3","_context3","x","insert","Array","mostLeft","newTypes","prevId","typeDefinition","origin","parent","isTypeDefinition","getNextOpId","typeid","_callee4","mostRight","ml","j","_context4","getInsertionCleanEnd","right","getOperation","t1","start","createType","applyCreatedOperations","awaitedInserts","awaitAndPrematurelyCall","newLeft","dels","delLength","targetId","_callee5","_context5","awaitedDeletes","addEventListener","removeEventListener","_changed","transaction","_context6","deleted","getInsertion","abrupt","receivedOp","get","CustomType","name","class","initType","YArrayInitializer","model","_context7","Struct","List","defineProperties","props","descriptor","enumerable","configurable","writable","Object","defineProperty","protoProps","staticProps","prototype"],"mappings":"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","file":"y-array.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y) {\n  class YArray {\n    constructor (os, _model, _content) {\n      this.os = os\n      this._model = _model\n      // Array of all the neccessary content\n      this._content = _content\n      this.eventHandler = new Y.utils.EventHandler(ops => {\n        var userEvents = []\n        ops.forEach(op => {\n          if (op.struct === 'Insert') {\n            let pos\n            // we check op.left only!,\n            // because op.right might not be defined when this is called\n            if (op.left === null) {\n              pos = 0\n            } else {\n              pos = 1 + this._content.findIndex(function (c) {\n                return Y.utils.compareIds(c.id, op.left)\n              })\n              if (pos <= 0) {\n                throw new Error('Unexpected operation!')\n              }\n            }\n            var values\n            var length\n            if (op.hasOwnProperty('opContent')) {\n              this._content.splice(pos, 0, {\n                id: op.id,\n                type: op.opContent\n              })\n              let opContent = op.opContent\n              length = 1\n              values = () => {\n                return new Promise(resolve => {\n                  this.os.requestTransaction(function *() {\n                    var type = yield* this.getType(opContent)\n                    resolve([type])\n                  })\n                })\n              }\n            } else {\n              var contents = op.content.map(function (c, i) {\n                return {\n                  id: [op.id[0], op.id[1] + i],\n                  val: c\n                }\n              })\n              // insert value in _content\n              this._content.splice.apply(this._content, [pos, 0].concat(contents))\n              values = op.content\n              length = op.content.length\n            }\n            userEvents.push({\n              type: 'insert',\n              object: this,\n              index: pos,\n              values: values,\n              // valueId: valueId, // TODO: does this still work as expected?\n              length: length\n            })\n          } else if (op.struct === 'Delete') {\n            let pos = this._content.findIndex(function (c) {\n              return Y.utils.compareIds(c.id, op.target)\n            })\n            if (pos >= 0) {\n              let content = this._content.splice(pos, op.length || 1)\n              let values = []\n              content.forEach((c) => {\n                if (c.hasOwnProperty('val')) {\n                  values.push(c.val)\n                } else {\n                  values = () => {\n                    return new Promise(resolve => {\n                      this.os.requestTransaction(function *() {\n                        var type = yield* this.getType(c.type)\n                        resolve([type])\n                      })\n                    })\n                  }\n                }\n              })\n              userEvents.push({\n                type: 'delete',\n                object: this,\n                index: pos,\n                values: values,\n                _content: content,\n                length: op.length || 1\n              })\n            }\n          } else {\n            throw new Error('Unexpected struct!')\n          }\n        })\n        this.eventHandler.callEventListeners(userEvents)\n      })\n    }\n    _destroy () {\n      this.eventHandler.destroy()\n      this.eventHandler = null\n      this._content = null\n      this._model = null\n      this.os = null\n    }\n    get length () {\n      return this._content.length\n    }\n    get (pos) {\n      if (pos == null || typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (pos >= this._content.length) {\n        return undefined\n      }\n      if (this._content[pos].type == null) {\n        return this._content[pos].val\n      } else {\n        var oid = this._content[pos].type\n        return new Promise((resolve) => {\n          this.os.requestTransaction(function *() {\n            var type = yield* this.getType(oid)\n            resolve(type)\n          })\n        })\n      }\n    }\n    // only returns primitive values\n    toArray () {\n      return this._content.map(function (x, i) {\n        return x.val\n      })\n    }\n    push (contents) {\n      this.insert(this._content.length, contents)\n    }\n    insert (pos, contents) {\n      if (typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (!(contents instanceof Array)) {\n        throw new Error('contents must be an Array of objects!')\n      }\n      if (contents.length === 0) {\n        return\n      }\n      if (pos > this._content.length || pos < 0) {\n        throw new Error('This position exceeds the range of the array!')\n      }\n      var mostLeft = pos === 0 ? null : this._content[pos - 1].id\n\n      var ops = []\n      var newTypes = []\n      var prevId = mostLeft\n      // TODOː use new content_s_ feature. don't iterate\n      for (var i = 0; i < contents.length;) {\n        var op = {\n          left: prevId,\n          origin: prevId,\n          // right: mostRight,\n          // NOTE: I intentionally do not define right here, because it could be deleted\n          // at the time of inserting this operation (when we get the transaction),\n          // and would therefore not defined in this._content\n          parent: this._model,\n          struct: 'Insert'\n        }\n        var _content = []\n        var typeDefinition\n        while (i < contents.length) {\n          var val = contents[i++]\n          typeDefinition = Y.utils.isTypeDefinition(val)\n          if (!typeDefinition) {\n            _content.push(val)\n          } else if (_content.length > 0) {\n            i-- // come back again later\n            break\n          }\n        }\n        if (_content.length > 0) {\n          // content is defined\n          op.content = _content\n          op.id = this.os.getNextOpId(_content.length)\n        } else {\n          // otherwise its a type\n          var typeid = this.os.getNextOpId(1)\n          newTypes.push([typeDefinition, typeid])\n          op.opContent = typeid\n          op.id = this.os.getNextOpId(1)\n        }\n        ops.push(op)\n        prevId = op.id\n      }\n      var eventHandler = this.eventHandler\n      this.os.requestTransaction(function *() {\n        // now we can set the right reference.\n        var mostRight\n        if (mostLeft != null) {\n          var ml = yield* this.getInsertionCleanEnd(mostLeft)\n          mostRight = ml.right\n        } else {\n          mostRight = (yield* this.getOperation(ops[0].parent)).start\n        }\n        for (var i = 0; i < newTypes.length; i++) {\n          yield* this.createType.apply(this, newTypes[i])\n        }\n        for (var j = 0; j < ops.length; j++) {\n          var op = ops[j]\n          op.right = mostRight\n        }\n        yield* this.applyCreatedOperations(ops)\n        eventHandler.awaitedInserts(ops.length)\n      })\n      eventHandler.awaitAndPrematurelyCall(ops)\n    }\n    delete (pos, length) {\n      if (length == null) { length = 1 }\n      if (typeof length !== 'number') {\n        throw new Error('length must be a number!')\n      }\n      if (typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (pos + length > this._content.length || pos < 0 || length < 0) {\n        throw new Error('The deletion range exceeds the range of the array!')\n      }\n      if (length === 0) {\n        return\n      }\n      var eventHandler = this.eventHandler\n      var newLeft = pos > 0 ? this._content[pos - 1].id : null\n      var dels = []\n      for (var i = 0; i < length; i = i + delLength) {\n        var targetId = this._content[pos + i].id\n        var delLength\n        // how many insertions can we delete in one deletion?\n        for (delLength = 1; i + delLength < length; delLength++) {\n          if (!Y.utils.compareIds(this._content[pos + i + delLength].id, [targetId[0], targetId[1] + delLength])) {\n            break\n          }\n        }\n        dels.push({\n          target: targetId,\n          struct: 'Delete',\n          length: delLength\n        })\n      }\n      eventHandler.awaitAndPrematurelyCall(dels)\n      this.os.requestTransaction(function *() {\n        yield* this.applyCreatedOperations(dels)\n        eventHandler.awaitedDeletes(dels.length, newLeft)\n      })\n    }\n    observe (f) {\n      this.eventHandler.addEventListener(f)\n    }\n    unobserve (f) {\n      this.eventHandler.removeEventListener(f)\n    }\n    * _changed (transaction, op) {\n      if (!op.deleted) {\n        if (op.struct === 'Insert') {\n          var l = op.left\n          var left\n          while (l != null) {\n            left = yield* transaction.getInsertion(l)\n            if (!left.deleted) {\n              break\n            }\n            l = left.left\n          }\n          op.left = l\n        }\n        this.eventHandler.receivedOp(op)\n      }\n    }\n  }\n\n  Y.extend('Array', new Y.utils.CustomType({\n    name: 'Array',\n    class: YArray,\n    struct: 'List',\n    initType: function * YArrayInitializer (os, model) {\n      var _content = []\n      yield* Y.Struct.List.map.call(this, model, function (op) {\n        if (op.hasOwnProperty('opContent')) {\n          _content.push({\n            id: op.id,\n            type: op.opContent\n          })\n        } else {\n          op.content.forEach(function (c, i) {\n            _content.push({\n              id: [op.id[0], op.id[1] + i],\n              val: op.content[i]\n            })\n          })\n        }\n      })\n      return new YArray(os, model.id, _content)\n    }\n  }))\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/* global Y */\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction extend(Y) {\n  var YArray = function () {\n    function YArray(os, _model, _content) {\n      var _this = this;\n\n      _classCallCheck(this, YArray);\n\n      this.os = os;\n      this._model = _model;\n      // Array of all the neccessary content\n      this._content = _content;\n      this.eventHandler = new Y.utils.EventHandler(function (ops) {\n        var userEvents = [];\n        ops.forEach(function (op) {\n          if (op.struct === 'Insert') {\n            var pos = undefined;\n            // we check op.left only!,\n            // because op.right might not be defined when this is called\n            if (op.left === null) {\n              pos = 0;\n            } else {\n              pos = 1 + _this._content.findIndex(function (c) {\n                return Y.utils.compareIds(c.id, op.left);\n              });\n              if (pos <= 0) {\n                throw new Error('Unexpected operation!');\n              }\n            }\n            var values;\n            var length;\n            if (op.hasOwnProperty('opContent')) {\n              (function () {\n                _this._content.splice(pos, 0, {\n                  id: op.id,\n                  type: op.opContent\n                });\n                var opContent = op.opContent;\n                length = 1;\n                values = function values() {\n                  return new Promise(function (resolve) {\n                    _this.os.requestTransaction(regeneratorRuntime.mark(function _callee() {\n                      var type;\n                      return regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              return _context.delegateYield(this.getType(opContent), 't0', 1);\n\n                            case 1:\n                              type = _context.t0;\n\n                              resolve([type]);\n\n                            case 3:\n                            case 'end':\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee, this);\n                    }));\n                  });\n                };\n              })();\n            } else {\n              var contents = op.content.map(function (c, i) {\n                return {\n                  id: [op.id[0], op.id[1] + i],\n                  val: c\n                };\n              });\n              // insert value in _content\n              _this._content.splice.apply(_this._content, [pos, 0].concat(contents));\n              values = op.content;\n              length = op.content.length;\n            }\n            userEvents.push({\n              type: 'insert',\n              object: _this,\n              index: pos,\n              values: values,\n              // valueId: valueId, // TODO: does this still work as expected?\n              length: length\n            });\n          } else if (op.struct === 'Delete') {\n            var pos = _this._content.findIndex(function (c) {\n              return Y.utils.compareIds(c.id, op.target);\n            });\n            if (pos >= 0) {\n              (function () {\n                var content = _this._content.splice(pos, op.length || 1);\n                var values = [];\n                content.forEach(function (c) {\n                  if (c.hasOwnProperty('val')) {\n                    values.push(c.val);\n                  } else {\n                    values = function values() {\n                      return new Promise(function (resolve) {\n                        _this.os.requestTransaction(regeneratorRuntime.mark(function _callee2() {\n                          var type;\n                          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.delegateYield(this.getType(c.type), 't0', 1);\n\n                                case 1:\n                                  type = _context2.t0;\n\n                                  resolve([type]);\n\n                                case 3:\n                                case 'end':\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2, this);\n                        }));\n                      });\n                    };\n                  }\n                });\n                userEvents.push({\n                  type: 'delete',\n                  object: _this,\n                  index: pos,\n                  values: values,\n                  _content: content,\n                  length: op.length || 1\n                });\n              })();\n            }\n          } else {\n            throw new Error('Unexpected struct!');\n          }\n        });\n        _this.eventHandler.callEventListeners(userEvents);\n      });\n    }\n\n    _createClass(YArray, [{\n      key: '_destroy',\n      value: function _destroy() {\n        this.eventHandler.destroy();\n        this.eventHandler = null;\n        this._content = null;\n        this._model = null;\n        this.os = null;\n      }\n    }, {\n      key: 'get',\n      value: function get(pos) {\n        var _this2 = this;\n\n        if (pos == null || typeof pos !== 'number') {\n          throw new Error('pos must be a number!');\n        }\n        if (pos >= this._content.length) {\n          return undefined;\n        }\n        if (this._content[pos].type == null) {\n          return this._content[pos].val;\n        } else {\n          var oid = this._content[pos].type;\n          return new Promise(function (resolve) {\n            _this2.os.requestTransaction(regeneratorRuntime.mark(function _callee3() {\n              var type;\n              return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      return _context3.delegateYield(this.getType(oid), 't0', 1);\n\n                    case 1:\n                      type = _context3.t0;\n\n                      resolve(type);\n\n                    case 3:\n                    case 'end':\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3, this);\n            }));\n          });\n        }\n      }\n      // only returns primitive values\n\n    }, {\n      key: 'toArray',\n      value: function toArray() {\n        return this._content.map(function (x, i) {\n          return x.val;\n        });\n      }\n    }, {\n      key: 'push',\n      value: function push(contents) {\n        this.insert(this._content.length, contents);\n      }\n    }, {\n      key: 'insert',\n      value: function insert(pos, contents) {\n        if (typeof pos !== 'number') {\n          throw new Error('pos must be a number!');\n        }\n        if (!(contents instanceof Array)) {\n          throw new Error('contents must be an Array of objects!');\n        }\n        if (contents.length === 0) {\n          return;\n        }\n        if (pos > this._content.length || pos < 0) {\n          throw new Error('This position exceeds the range of the array!');\n        }\n        var mostLeft = pos === 0 ? null : this._content[pos - 1].id;\n\n        var ops = [];\n        var newTypes = [];\n        var prevId = mostLeft;\n        // TODOː use new content_s_ feature. don't iterate\n        for (var i = 0; i < contents.length;) {\n          var op = {\n            left: prevId,\n            origin: prevId,\n            // right: mostRight,\n            // NOTE: I intentionally do not define right here, because it could be deleted\n            // at the time of inserting this operation (when we get the transaction),\n            // and would therefore not defined in this._content\n            parent: this._model,\n            struct: 'Insert'\n          };\n          var _content = [];\n          var typeDefinition;\n          while (i < contents.length) {\n            var val = contents[i++];\n            typeDefinition = Y.utils.isTypeDefinition(val);\n            if (!typeDefinition) {\n              _content.push(val);\n            } else if (_content.length > 0) {\n              i--; // come back again later\n              break;\n            }\n          }\n          if (_content.length > 0) {\n            // content is defined\n            op.content = _content;\n            op.id = this.os.getNextOpId(_content.length);\n          } else {\n            // otherwise its a type\n            var typeid = this.os.getNextOpId(1);\n            newTypes.push([typeDefinition, typeid]);\n            op.opContent = typeid;\n            op.id = this.os.getNextOpId(1);\n          }\n          ops.push(op);\n          prevId = op.id;\n        }\n        var eventHandler = this.eventHandler;\n        this.os.requestTransaction(regeneratorRuntime.mark(function _callee4() {\n          var mostRight, ml, i, j, op;\n          return regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  if (!(mostLeft != null)) {\n                    _context4.next = 6;\n                    break;\n                  }\n\n                  return _context4.delegateYield(this.getInsertionCleanEnd(mostLeft), 't0', 2);\n\n                case 2:\n                  ml = _context4.t0;\n\n                  mostRight = ml.right;\n                  _context4.next = 8;\n                  break;\n\n                case 6:\n                  return _context4.delegateYield(this.getOperation(ops[0].parent), 't1', 7);\n\n                case 7:\n                  mostRight = _context4.t1.start;\n\n                case 8:\n                  i = 0;\n\n                case 9:\n                  if (!(i < newTypes.length)) {\n                    _context4.next = 14;\n                    break;\n                  }\n\n                  return _context4.delegateYield(this.createType.apply(this, newTypes[i]), 't2', 11);\n\n                case 11:\n                  i++;\n                  _context4.next = 9;\n                  break;\n\n                case 14:\n                  for (j = 0; j < ops.length; j++) {\n                    op = ops[j];\n\n                    op.right = mostRight;\n                  }\n                  return _context4.delegateYield(this.applyCreatedOperations(ops), 't3', 16);\n\n                case 16:\n                  eventHandler.awaitedInserts(ops.length);\n\n                case 17:\n                case 'end':\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n        eventHandler.awaitAndPrematurelyCall(ops);\n      }\n    }, {\n      key: 'delete',\n      value: function _delete(pos, length) {\n        if (length == null) {\n          length = 1;\n        }\n        if (typeof length !== 'number') {\n          throw new Error('length must be a number!');\n        }\n        if (typeof pos !== 'number') {\n          throw new Error('pos must be a number!');\n        }\n        if (pos + length > this._content.length || pos < 0 || length < 0) {\n          throw new Error('The deletion range exceeds the range of the array!');\n        }\n        if (length === 0) {\n          return;\n        }\n        var eventHandler = this.eventHandler;\n        var newLeft = pos > 0 ? this._content[pos - 1].id : null;\n        var dels = [];\n        for (var i = 0; i < length; i = i + delLength) {\n          var targetId = this._content[pos + i].id;\n          var delLength;\n          // how many insertions can we delete in one deletion?\n          for (delLength = 1; i + delLength < length; delLength++) {\n            if (!Y.utils.compareIds(this._content[pos + i + delLength].id, [targetId[0], targetId[1] + delLength])) {\n              break;\n            }\n          }\n          dels.push({\n            target: targetId,\n            struct: 'Delete',\n            length: delLength\n          });\n        }\n        eventHandler.awaitAndPrematurelyCall(dels);\n        this.os.requestTransaction(regeneratorRuntime.mark(function _callee5() {\n          return regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  return _context5.delegateYield(this.applyCreatedOperations(dels), 't0', 1);\n\n                case 1:\n                  eventHandler.awaitedDeletes(dels.length, newLeft);\n\n                case 2:\n                case 'end':\n                  return _context5.stop();\n              }\n            }\n          }, _callee5, this);\n        }));\n      }\n    }, {\n      key: 'observe',\n      value: function observe(f) {\n        this.eventHandler.addEventListener(f);\n      }\n    }, {\n      key: 'unobserve',\n      value: function unobserve(f) {\n        this.eventHandler.removeEventListener(f);\n      }\n    }, {\n      key: '_changed',\n      value: regeneratorRuntime.mark(function _changed(transaction, op) {\n        var l, left;\n        return regeneratorRuntime.wrap(function _changed$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (op.deleted) {\n                  _context6.next = 13;\n                  break;\n                }\n\n                if (!(op.struct === 'Insert')) {\n                  _context6.next = 12;\n                  break;\n                }\n\n                l = op.left;\n\n              case 3:\n                if (!(l != null)) {\n                  _context6.next = 11;\n                  break;\n                }\n\n                return _context6.delegateYield(transaction.getInsertion(l), 't0', 5);\n\n              case 5:\n                left = _context6.t0;\n\n                if (left.deleted) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                return _context6.abrupt('break', 11);\n\n              case 8:\n                l = left.left;\n                _context6.next = 3;\n                break;\n\n              case 11:\n                op.left = l;\n\n              case 12:\n                this.eventHandler.receivedOp(op);\n\n              case 13:\n              case 'end':\n                return _context6.stop();\n            }\n          }\n        }, _changed, this);\n      })\n    }, {\n      key: 'length',\n      get: function get() {\n        return this._content.length;\n      }\n    }]);\n\n    return YArray;\n  }();\n\n  Y.extend('Array', new Y.utils.CustomType({\n    name: 'Array',\n    class: YArray,\n    struct: 'List',\n    initType: regeneratorRuntime.mark(function YArrayInitializer(os, model) {\n      var _content;\n\n      return regeneratorRuntime.wrap(function YArrayInitializer$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _content = [];\n              return _context7.delegateYield(Y.Struct.List.map.call(this, model, function (op) {\n                if (op.hasOwnProperty('opContent')) {\n                  _content.push({\n                    id: op.id,\n                    type: op.opContent\n                  });\n                } else {\n                  op.content.forEach(function (c, i) {\n                    _content.push({\n                      id: [op.id[0], op.id[1] + i],\n                      val: op.content[i]\n                    });\n                  });\n                }\n              }), 't0', 2);\n\n            case 2:\n              return _context7.abrupt('return', new YArray(os, model.id, _content));\n\n            case 3:\n            case 'end':\n              return _context7.stop();\n          }\n        }\n      }, YArrayInitializer, this);\n    })\n  }));\n}\n\nmodule.exports = extend;\nif (typeof Y !== 'undefined') {\n  extend(Y);\n}\n\n},{}]},{},[1])\n\n"],"sourceRoot":"/source/"}